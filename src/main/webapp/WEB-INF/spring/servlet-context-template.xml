<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	 
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
     
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="order" value="2"/>
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
    <beans:bean id="viewResolver1" class="org.springframework.web.servlet.view.XmlViewResolver">
        <beans:property name="order" value="1"/>
        <beans:property name="location" value="/WEB-INF/views.xml"/>
    </beans:bean>
	
	<!-- Configure to plugin JSON as request and response in method handler -->
    <beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <beans:property name="messageConverters">
            <beans:list>
                <beans:ref bean="jsonMessageConverter"/>
            </beans:list>
        </beans:property>
    </beans:bean>
     
    <!-- Configure bean to convert JSON to POJO and vice versa -->
    <beans:bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
    </beans:bean> 	 

	<!--  enable @Aspect -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>

	<!-- Configure DB password encryption -->
	<beans:bean id="environmentVariablesConfiguration" class="com.hsbc.gbm.ptutilities.spt.util.HSBCPBEConfig">
	    <beans:constructor-arg value="hibernate.properties" />
   		<beans:property name="algorithm" value="PBEWithMD5AndDES" />
   		<beans:property name="passwordEnvName" value="APP_ENCRYPTION_PASSWORD" />
 	</beans:bean>
 
	<beans:bean id="configurationEncryptor" class="org.jasypt.encryption.pbe.StandardPBEStringEncryptor">
   		<beans:property name="config" ref="environmentVariablesConfiguration" />
 	</beans:bean>
 
    <!-- DB properties file encrypted -->
 	<beans:bean id="propertyConfigurer" class="org.jasypt.spring31.properties.EncryptablePropertyPlaceholderConfigurer">
   		<beans:constructor-arg ref="configurationEncryptor" />
   		<beans:property name="locations">
     		<beans:list>
       			<!-- <beans:value>file:C:\\tmp\\db_SPTS_Encrypt.properties</beans:value> -->
       			<!-- <beans:value>file:/appvol/apps/spts/config/db_SPTS_Encrypt.properties</beans:value> -->
     			<beans:value>file:/appvol/apps/spts/config/db_SPTS_Encrypt.properties</beans:value>
		</beans:list>
   		</beans:property>
 	</beans:bean>
	
	<beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<beans:property name="driverClassName" value="${datasource.driver}" />
		<beans:property name="url" value="${datasource.url}" />
		<beans:property name="username" value="${datasource.username}" />
		<beans:property name="password" value="${dataSource.password}" />
	</beans:bean>
	
	 <!-- Hibernate 4 SessionFactory Bean definition -->
	<beans:bean id="hibernate4AnnotatedSessionFactory" 
	        class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" /> 
		<beans:property name="packagesToScan">
              <beans:value>com.hsbc.gbm.ptutilities.spt.model</beans:value>
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect </beans:prop>
				<beans:prop key="hibernate.show_sql">true</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
	
	<beans:bean id="adUtil" class="com.hsbc.gbm.ptutilities.spt.util.ADUtil">
	<beans:constructor-arg index="0" value="${LDAP.URL}"/>
        <beans:constructor-arg index="1" value="${LDAP.BindAccount}"/>
        <beans:constructor-arg index="2" value="${LDAP.BindPassword}"/>
	</beans:bean>
	
	
	
	<context:component-scan base-package="com.hsbc" />
	
	 <tx:annotation-driven transaction-manager="transactionManager"/> 
	
	<beans:bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	
	<!-- for sending email -->
	<beans:bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <!-- <beans:property name="host" value="intsmtp2.hk.hsbc"/> -->
        <beans:property name="host" value="${SMTP.Host}"/> 
        <beans:property name="port" value="${SMTP.Port}"/>
    </beans:bean>

    <beans:bean id="alertMailMessage" class="org.springframework.mail.SimpleMailMessage">
    </beans:bean>

    <beans:bean id="mailService" class="com.hsbc.gbm.ptutilities.spt.impl.MailServiceImpl">
    	<beans:property name="mailFrom" value="${NFRA.MAILFROM}"/> 
    </beans:bean>



</beans:beans>
