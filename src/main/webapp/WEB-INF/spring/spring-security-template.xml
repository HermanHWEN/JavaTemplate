<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
  xmlns:beans="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
  http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
  http://www.springframework.org/schema/security
  http://www.springframework.org/schema/security/spring-security-3.2.xsd">

  <http auto-config="true" use-expressions="true">
  
  <!-- 
  <intercept-url pattern="/home*" access="isAuthenticated()" />
  -->
  <intercept-url pattern="/form/**" access="isAuthenticated()" />
  <intercept-url pattern="/form1/*" access="isAuthenticated()" />
  <intercept-url pattern="/done*" access="isAuthenticated()" />
  <!--
  <intercept-url pattern="/show*" access="isAuthenticated()" />
  <intercept-url pattern="/remove*" access="hasRole('RAD_ADMIN')" />
  <intercept-url pattern="/add*" access="hasRole('RAD_ADMIN')" />
  <intercept-url pattern="/update*" access="hasRole('RAD_ADMIN')" />
  <intercept-url pattern="/getXlaFile*" access="permitAll" />
  <intercept-url pattern="/get*" access="isAuthenticated()" />
  -->
  <!-- transaction actions not allow support account to access-->
    <intercept-url pattern="/save*" access="hasRole('FO_Sales') or hasRole('BO_Sales') or hasRole('Admin')" />
    <intercept-url pattern="/submit*" access="hasRole('FO_Sales') or hasRole('PHS_Approver') or hasRole('FO_Credit_Risk_User')" />
	<intercept-url pattern="/export*" access="hasRole('FO_Sales') or hasRole('BO_Sales') or hasRole('Approver')" />
	<intercept-url pattern="/delete*" access="hasRole('FO_Sales') or hasRole('Admin')"/>	

  
    <access-denied-handler error-page="/denied" />
    <!-- authentication-failure-url="/login?loginError=1" -->
    <!-- default-target-url="/home" -->
  <form-login
        login-page="/login"
      authentication-success-handler-ref="customAuthenticationSuccessHandler"
      authentication-failure-handler-ref="authenticationFailureHandler"
      username-parameter="staffID"
      password-parameter="password" />

  <logout invalidate-session="true" logout-success-url="/login?logOutMsg=1" logout-url="/j_spring_security_logout" delete-cookies="JSESSIONID" />
  <session-management invalid-session-url="/login?logOutMsg=1">
    <concurrency-control max-sessions="1" expired-url="/login?sessionInvalid=1" />
  </session-management>
  <!-- enable csrf protection -->
  <!-- <csrf /> -->
  </http>
  
  <beans:bean id="authenticationFailureHandler" class="com.hsbc.gbm.ptutilities.spt.service.CustomAuthenticationFailHandler" >
    <beans:property name="defaultFailureUrl" value="/login?loginError=1"/>
  </beans:bean>
  
  <beans:bean id="customAuthenticationSuccessHandler" class="com.hsbc.gbm.ptutilities.spt.service.CustomAuthenticationSuccessHandler"></beans:bean>

  <beans:bean id="contextSource" class="org.springframework.security.ldap.DefaultSpringSecurityContextSource">
       <beans:constructor-arg value="${LDAP.URL}"/>
       <beans:property name="userDn" value="${LDAP.BindAccount}"/>
       <beans:property name="password" value="${LDAP.BindPassword}"/>
    </beans:bean>

    <beans:bean id="userSearch" class="org.springframework.security.ldap.search.FilterBasedLdapUserSearch">
       <beans:constructor-arg index="0" value=""/>
       <beans:constructor-arg index="1" value="(hsbc-ad-SAMAccountName={0})"/>
       <beans:constructor-arg index="2" ref="contextSource"/>
    </beans:bean>

    <beans:bean id="ldapAuthProvider" class="org.springframework.security.ldap.authentication.LdapAuthenticationProvider">
       <beans:constructor-arg>
          <beans:bean class="org.springframework.security.ldap.authentication.BindAuthenticator">
             <beans:constructor-arg ref="contextSource"/>
             <beans:property name="userSearch" ref="userSearch"/>
          </beans:bean>
       </beans:constructor-arg>
       <beans:constructor-arg>
          <beans:bean class="com.hsbc.gbm.ptutilities.spt.service.CustomLdapAuthoritiesPopulator">
          </beans:bean>
       </beans:constructor-arg>
    </beans:bean>

    
     <beans:bean id="customProvider" class="com.hsbc.gbm.ptutilities.common.util.CustomAuthenticationProvider">
    </beans:bean>
   

    <authentication-manager>
    	<!-- <authentication-provider ref="customProvider"/> -->
       	<authentication-provider ref="ldapAuthProvider"/>
    </authentication-manager>

    <beans:bean id="webSecurityExpressionHandler" class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler" />
  
</beans:beans>
